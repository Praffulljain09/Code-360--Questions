#include <bits/stdc++.h>
bool ispossible(vector<int> &rank, int m, int cook, int mid) {
  int dishes = 0;
  for (int i = 0; i < cook; i++) {
    int time = 0;
    int j = 1;
    while (time + rank[i] * j <= mid) {
      time += rank[i] * j;
      j += 1;
      dishes += 1;
    }
  }
  if (dishes >= m) {
    return true;
  } else {
    return false;
  }
}
int minCookTime(vector<int> &rank, int m) {
  sort(rank.begin(), rank.end());
  int cook = rank.size();
  int start = 0;
  int maxtime = (rank[cook - 1] * m * (m + 1)) / 2;
  int end = maxtime;
  int ans = -1;
  while (start <= end) {
    int mid = start + (end - start) / 2;
    if (ispossible(rank, m, cook, mid)) {
      ans = mid;
      end = mid - 1;

    } else {
      start = mid + 1;
    }
  }
  return ans;
}
