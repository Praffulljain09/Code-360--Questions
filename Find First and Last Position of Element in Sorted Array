int fo(vector<int> &arr, int key) {
  int size = arr.size();
  int start = 0;
  int end = size - 1;
  int mid = start + (end - start) / 2;
  int ans = -1;
  while (start <= end) {
    if (arr[mid] == key) {
      ans = mid;
      end = mid - 1;
    } else if (arr[mid] < key) {
      start = mid + 1;
    } else if (arr[mid] > key) {
      end = mid - 1;
    }
    mid = start + (end - start) / 2;
  }
  return ans;
}
int lo(vector<int> &arr, int key) {
  int size = arr.size();
  int start = 0;
  int end = size - 1;
  int mid = start + (end - start) / 2;
  int ans = -1;
  while (start <= end) {
    if (arr[mid] == key) {
      ans = mid;
      start = mid + 1;
    } else if (arr[mid] < key) {
      start = mid + 1;
    } else if (arr[mid] > key) {
      end = mid - 1;
    }
    mid = start + (end - start) / 2;
  }
  return ans;
}
vector<int> searchRange(vector<int> &arr, int x) {
  vector<int> p;
  int f = fo(arr, x);
  int l = lo(arr, x);
  p.push_back(f);
  p.push_back(l);
  return p;
}
