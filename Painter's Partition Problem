bool ispossible(vector<int> &boards, int k, int n, int mid){
    int paintercount=1;
    int timecount=0;
    for(int i=0; i<n; i++){
        if(timecount+boards[i]<=mid){
            timecount+=boards[i];
        }
        else{
            paintercount++;
            if(paintercount>k||boards[i]>mid){
                return false;
            }
            timecount=boards[i];
        }
    }
    return true;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int n=boards.size();
    int start=0;
    int sum=0;
    for(int i=0; i<n; i++){
        sum+=boards[i];
    }
    int end=sum;
    int mid=start+(end-start)/2;
    int ans=-1;
    while(start<=end){
        if(ispossible(boards,k,n,mid)){
            ans=mid;
            end=mid-1;
        }
        else{
            start=mid+1;
        }
        mid=start+(end-start)/2;
    }
    return ans;
}
